#include <robotsim.h>
#include <dlfcn.h>
#include <stdarg.h>

CRobotSim::CRobotSim() {
	void *fptr;
	if(CRobotSim::g_chrobotsim_dlhandle == NULL || CRobotSim::g_chrobotsim_dlcount == 0) {
		CRobotSim::g_chrobotsim_dlhandle = dlopen("librobotsim.dl", RTLD_LAZY);
		if(CRobotSim::g_chrobotsim_dlhandle == NULL) {
			printf("Error: %s(): dlopen(): %s\n", __class_func__, dlerror());
			return;
		}
	}
	fptr = dlsym(CRobotSim::g_chrobotsim_dlhandle, "CRobotSim_CRobotSim_chdl");
	if(fptr == NULL) {
		printf("Error: %s(): dlsym(): %s\n", __class_func__, dlerror());
		return;
	}
	dlrunfun(fptr, NULL, NULL);
	CRobotSim::g_chrobotsim_dlcount++; // to increase count of instance
}

CRobotSim::~CRobotSim() {
	void *fptr;
	fptr = dlsym(CRobotSim::g_chrobotsim_dlhandle, "CRobotSim_dCRobotSim_chdl");
	if(fptr == NULL) {
		printf("Error: %s(): dlsym(): %s\n", __class_func__, dlerror());
		return;
	}
	dlrunfun(fptr, NULL, NULL, this);
	CRobotSim::g_chrobotsim_dlcount--; // to decrease count of instance
	if(CRobotSim::g_chrobotsim_dlcount <= 0 && CRobotSim::g_chrobotsim_dlhandle != NULL) {
		if(dlclose(CRobotSim::g_chrobotsim_dlhandle)!=0)
			printf("Error: %s(): dlclose(): %s\n", __class_func__, dlerror());
	}
}
